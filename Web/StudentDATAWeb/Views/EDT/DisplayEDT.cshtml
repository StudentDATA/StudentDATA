@{
    ViewBag.Title = "DisplayEDT";
}
@{
    var culture = new System.Globalization.CultureInfo("fr-FR");
    var dayOfWeek = culture.DateTimeFormat.GetDayName(@ViewBag.currentDay.DayOfWeek);
    var month = culture.DateTimeFormat.GetMonthName(@ViewBag.currentDay.Month);
}
<h2 class="center-block"> @dayOfWeek @ViewBag.currentDay.Day @month </h2>
@{
    string day = "";
    DateTime currentDay = ViewBag.currentday;
    var culture = new System.Globalization.CultureInfo("fr-FR");
    var dayday = culture.DateTimeFormat.GetDayName(currentDay.DayOfWeek);
    var daymonth = culture.DateTimeFormat.GetMonthName(currentDay.Month);
}
<h2 class="center-block">@dayday @currentDay.Day @daymonth</h2>

@if (ViewBag.NoProfil)
{
    <div class="half-day-container">
        Veuillez Compléter votre profil pour accéder à l'emploi du temps.
    </div>
}
else if (ViewBag.NoSemester)
{
    <div class="half-day-container">
        Veuillez choisir un semestre valide pour accéder à l'emploi du temps.
    </div>
}
else
{
    if (ViewBag.Planning != null)
    {
        foreach (var e in ViewBag.Planning)
        {
    int heuredeb = e.Beg.TimeOfDay.Hours + 2;
    int heurefin = e.End.TimeOfDay.Hours + 2;
    string minutdeb = String.Format("{0:00}", e.Beg.TimeOfDay.Minutes);
    string minutfin = String.Format("{0:00}", e.End.TimeOfDay.Minutes);
    
    string heuredebut = heuredeb.ToString() + " h " + minutdeb;
    string heurefinale = heurefin.ToString() + " h " + minutfin;
            string path;
            DateTime begin = e.Beg;
            // int result = DateTime.Compare(begin, currentDay);

            if (currentDay.Date == begin.Date)
            {


                day = e.BegToString;

                if (currentDay.Date == begin.Date)
                {
                    day = e.BegToString;
                    if ((string)e.Title == "Projet Informatique")
                    {
                        path = "/Images/PI-Patch.png";
                    }
                    else if (e.Title == "PFH")
                    {
                        path = "/Images/PFH-Patch.png";
                    }
                    else if (e.Title == "Anglais")
                    {
                        path = "/Images/ANG-Patch.png";
                    }
                    else if (e.Title == "Libre")
                    {
                        path = "/Images/LIBRE-Patch.png";
                    }
                    else
                    {
                        path = "/Images/COURS-Patch.png";
                    }
                    <center>
                        <div class="half-day-container">
                            <div class="information">
                                <label class="lesson-title">@e.Title</label><br />
                                <label>@e.Location</label><br />
                                <label>@e.TeachersToString</label><br />
                                <label>@e.Code</label><br />
                        <label>@heuredebut</label><br />
                        <label>@heurefinale</label><br />
                            </div>
                            <div class="act-illustrator"><img src="@path" /></div>
                        </div>
                    </center>
                    @*using (Html.BeginForm("DeleteEvent", "EDT"))
                        {
                        <input class="btn btn-primary col-md-offset-3" type="submit" value="Supprimer" /><br />
                            <input type="hidden" name="DeleteEvent" value="@e" />
                        }*@
                }

            }
        }
    }

    if (ViewBag.PlanningEventAll != null)
    {
        foreach (var e in ViewBag.PlanningEventAll)
        {
    int heuredeb = e.Beg.TimeOfDay.Hours -2 ;
    int heurefin = e.End.TimeOfDay.Hours -2 ;
    string minutdeb = String.Format("{0:00}", e.Beg.TimeOfDay.Minutes);
    string minutfin = String.Format("{0:00}", e.End.TimeOfDay.Minutes);

    string heuredebut = heuredeb.ToString() + " h " + minutdeb;
    string heurefinale = heurefin.ToString() + " h " + minutfin;
    //DateTime currentDay = ViewBag.currentday;
            DateTime begin = e.Beg;
            // int result = DateTime.Compare(begin, currentDay);

            if (currentDay.Date == begin.Date)
            {
                <center>
                    <div class="half-day-container">
                        <div class="information">
                            <label class="lesson-title">@e.Title</label><br />
                            <label>@e.Location</label><br />
                            <label>@e.TeachersToString</label><br />
                    @*<label>@e.Code</label><br />*@
                    <label>@heuredebut</label><br />
                    <label>@heurefinale</label><br />
                        </div>
                        @using (Html.BeginForm("DeleteEvent", "EDT"))
                        {
                            <input class="btn btn-danger col-md-offset-3" type="submit" value="X" /><br />
                            <input type="hidden" name="DeleteEvent" value="@e.Code" />
                        }
                    </div>
                </center>


            }
        }
    }



    using (Html.BeginForm("PreviousDayPlanning", "EDT"))
    {
        <input class="btn btn-primary col-md-offset-5" type="submit" value="Jour précédent" /><br />
        <input type="hidden" name="CurrentDayHidden" value="@day" />
    }
    using (Html.BeginForm("NextDayPlanning", "EDT"))
    {
        <input class="btn btn-primary col-md-offset-5" type="submit" value="Jour suivant" /><br />
        <input type="hidden" name="CurrentDayHidden" value="@day" />
    }
    @*@Html.ActionLink("Supprimer", "DeleteEvent", "EDT", routeValues: null, htmlAttributes: new { id = e, title = "Supprimer un évènement", @class = " col-md-offset-5 btn btn-default" });*@
    @Html.ActionLink("Ajouter", "AddEvent", "EDT", routeValues: null, htmlAttributes: new { title = "Ajouter un évènement", @class = " col-md-offset-3 btn btn-primary" })
    @*<div class="edt-button-container">
        @Html.ActionLink("Jour précédent", "PreviousDayPlanning", "EDT", routeValues: null, htmlAttributes: new { title = "Mes flux d'actualités", @class = "col-md-2  btn btn-default" })
        @Html.ActionLink("Jour suivant", "NextDayPlanning", "EDT", routeValues: null, htmlAttributes: new { title = "Mes flux d'actualités", @class = "col-md-2 btn btn-default" })
            </div>*@

}


